{"version":3,"sources":["effects/theme.mp3","effects/jump.mp3","effects/coin.mp3","effects/end.mp3","components/Character.jsx","components/Finished.jsx","components/Chronometer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Character","this","props","symbol","action","type","onClick","className","Component","Finished","width","src","Chronometer","changeTime","bind","handleCharacterClick","clockTurnSwitch","checkSetupTime","rendererCountdown","state","showCountdown","showStop","timeShow","timeSetup","miliseconds","sounds","theme","Sound","status","PLAYING","jump","coin","end","spliedTimeSetup","split","console","log","length","alert","number","setState","oldState","updateValue","slice","parseInt","character","forEach","clear","delete","convertToMiliseconds","hours","minutes","seconds","completed","url","endMp3","playbackRate","volume","playStatus","coinMp3","themeMp3","loop","jumpMp3","date","Date","now","renderer","generateKeyboard","App","videoId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAAe,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,gC,OC6B1BA,E,4JA1Bb,WACE,MAAiCC,KAAKC,MAA9BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAChB,MAAa,cADb,EAAwBC,KAGpB,qBAAKC,QAAU,kBAAMF,EAAOD,IAAUI,UAAU,aAAhD,SACE,6BAAMJ,MAKI,QAAXA,GAAiC,UAAXA,EAEvB,qBAAKG,QAAU,kBAAMF,EAAOD,IAAUI,UAAU,4BAAhD,SACE,oBAAIA,UAAU,cAAd,SAA8BJ,MAMlC,qBAAKG,QAAU,kBAAMF,EAAOD,IAAUI,UAAU,wBAAhD,SACE,6BAAMJ,U,GArBUK,aCWTC,E,4JAVb,WACE,OACE,0BAASF,UAAU,WAAnB,UACE,qBAAKG,MAAM,MAAMC,IAAI,iFACrB,oBAAIJ,UAAU,WAAd,wC,GALeC,aC4KRI,E,kDAlKb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAEDW,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKI,kBAAoB,EAAKA,kBAAkBJ,KAAvB,gBAEzB,EAAKK,MAAQ,CACXC,eAAe,EACfC,UAAU,EACVC,SAAU,GACVC,UAAW,IACXC,YAAa,EACbC,OAAQ,CACNC,MAAOC,IAAMC,OAAOC,QACpBC,KAAMH,IAAMC,OAAOC,QACnBE,KAAMJ,IAAMC,OAAOC,QACnBG,IAAKL,IAAMC,OAAOC,UAnBL,E,kDAwBnB,WACE,IAAMI,EAAkBhC,KAAKkB,MAAMI,UAAUW,MAAM,IAEnD,OADAC,QAAQC,IAAIH,KACRA,EAAgBI,OAAS,KAC3BC,MAAM,0DACC,K,wBAKX,SAAWC,GACLtC,KAAKgB,kBACPhB,KAAKuC,UAAS,SAACC,GACb,IAAIC,EAAcD,EAASlB,UAAYgB,EAIvC,MAH2B,MAAvBE,EAASlB,YACXmB,EAAcH,GAET,CAAEhB,UAAWmB,Q,mBAK1B,WACEzC,KAAKuC,SAAS,CAAEjB,UAAW,Q,oBAG7B,WACMtB,KAAKgB,kBACPhB,KAAKuC,UAAS,SAACC,GACb,IAAIC,EAAcD,EAASlB,UAAUoB,MAAM,GAAI,GAI/C,OAHIF,EAASlB,UAAUc,OAAS,IAC9BK,EAAc,KAET,CAAEnB,UAAWmB,Q,kCAK1B,WACE,IAAQnB,EAActB,KAAKkB,MAAnBI,UACFC,EAAwC,IAA1BoB,SAASrB,EAAW,IAExCtB,KAAKuC,SAAS,CAAEhB,kB,kCAGlB,SAAqBqB,GAAY,IAAD,OACd,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEtDC,SAAQ,SAACP,GACXM,IAAcN,GAChB,EAAK1B,WAAWgC,MAIF,MAAdA,GACF5C,KAAK8C,QAGW,MAAdF,GACF5C,KAAK+C,SAGP/C,KAAKuC,SAAS,CAAEpB,eAAe,EAAOC,UAAU,EAAOU,KAAMJ,IAAMC,OAAOC,Y,8BAG5E,WACE,OACE,uBAAMtB,UAAU,WAAhB,UACE,mBAAGA,UAAU,mBAAb,wBACA,cAAC,EAAD,CAAWH,OAAS,kBAAMkC,MAAM,wCAAyCnC,OAASF,KAAKkB,MAAMI,UAAYlB,KAAK,cAC9G,cAAC,EAAD,CAAWD,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKc,qBAAuBZ,OAAO,MACvD,cAAC,EAAD,CAAWC,OAASH,KAAKe,gBAAkBb,OAASF,KAAKkB,MAAME,SAAW,MAAQ,e,6BAKxF,WACEpB,KAAKgD,uBACLhD,KAAKuC,UAAS,SAACC,GAAD,MACZ,CAAErB,eAAgBqB,EAASrB,cAAeC,UAAWoB,EAASpB,SAAUE,UAAW,U,+BAIvF,YAA2D,IAAvC2B,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAClC,OADwD,EAAbC,UAElC,gCACP,cAAC,IAAD,CACIC,IAAMC,EACNC,aAAc,GACdC,OAAQ,GACRC,WAAYzD,KAAKkB,MAAMM,OAAOO,MAElC,cAAC,EAAD,OAIK,uBAAMzB,UAAU,YAAhB,UAA6B2C,EAA7B,IAAqCC,EAArC,IAA+CC,O,+BAGxD,WACEnD,KAAKuC,SAAS,CAAEd,OAAO,M,oBAGzB,WACE,MAAgFzB,KAAKkB,MAArF,IAAQM,OAAUC,EAAlB,EAAkBA,MAAOI,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,KAAQX,EAAvC,EAAuCA,cAAeC,EAAtD,EAAsDA,SAAUG,EAAhE,EAAgEA,YAChE,OACE,0BAASjB,UAAU,cAAnB,UACE,2BAEA,uBAAMA,UAAU,iBAAhB,UACE,qBAAKA,UAAU,aACf,sBAAKA,UAAU,WAAf,UACGa,GAAiBC,GAAa,cAAC,IAAD,CAAOiC,IAAMK,EAAUH,aAAc,EAAGC,OAAQ,GAAIC,WAAY3B,IAC/FX,GAAiB,cAAC,IAAD,CAAOkC,IAAMM,EAAWJ,aAAc,EAAGC,OAAQ,IAAKC,WAAYhC,EAAOmC,MAAM,KAC/FzC,GAAiB,cAAC,IAAD,CAAOkC,IAAMQ,EAAUN,aAAc,EAAGC,OAAQ,GAAIC,WAAY5B,IAClFV,GAAiB,cAAC,IAAD,CAAW2C,KAAMC,KAAKC,MAAQzC,EAAa0C,SAAWjE,KAAKiB,uBAE5EjB,KAAKkE,sBAET,iCACE,6C,GA5JgB3D,aCGX4D,MARf,WACE,OACE,cAAC,IAAD,CAAmB7D,UAAU,mBAAmB8D,QAAQ,cAAxD,SACE,cAAC,EAAD,OCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d836c683.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/theme.1b8f9596.mp3\";","export default __webpack_public_path__ + \"static/media/jump.23436879.mp3\";","export default __webpack_public_path__ + \"static/media/coin.36efd588.mp3\";","export default __webpack_public_path__ + \"static/media/end.248d308b.mp3\";","import React, { Component } from 'react';\n\nclass Character extends Component {\n  render() {\n    const { symbol, action, type } = this.props;\n    if (type === 'timeSetup') {\n      return (\n        <div onClick={ () => action(symbol) } className=\"time-setup\">\n          <h1>{ symbol }</h1>\n        </div>\n      );\n    }\n\n    if ((symbol === 'New') || (symbol === 'Start')) {\n      return (\n        <div onClick={ () => action(symbol) } className=\"action-button zoom-button\">\n          <h1 className=\"zoom-button\">{ symbol }</h1>\n        </div>\n      );\n    }\n\n    return (\n      <div onClick={ () => action(symbol) } className=\"character zoom-button\">\n        <h1>{ symbol }</h1>\n      </div>\n    );\n  }\n}\n\nexport default Character;\n","import React, { Component } from 'react';\n\nclass Finished extends Component {\n  render() {\n    return (\n      <section className=\"finished\">\n        <img width=\"300\" src=\"https://i.pinimg.com/originals/39/63/56/39635620bc39fd89280af66645b69d80.gif\" />\n        <h1 className=\"blinking\">Your break is over!</h1>\n      </section>\n    );\n  }\n}\n\nexport default Finished;","import React, { Component } from 'react';\nimport Countdown from 'react-countdown';\nimport Sound from 'react-sound';\nimport themeMp3 from '../effects/theme.mp3';\nimport jumpMp3 from '../effects/jump.mp3';\nimport coinMp3 from '../effects/coin.mp3';\nimport endMp3 from '../effects/end.mp3';\n\nimport Character from './Character.jsx';\nimport Finished from './Finished.jsx';\n\nclass Chronometer extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.changeTime = this.changeTime.bind(this);\n    this.handleCharacterClick = this.handleCharacterClick.bind(this);\n    this.clockTurnSwitch = this.clockTurnSwitch.bind(this);\n    this.checkSetupTime = this.checkSetupTime.bind(this);\n    this.rendererCountdown = this.rendererCountdown.bind(this);\n    \n    this.state = {\n      showCountdown: false,\n      showStop: false,\n      timeShow: '',\n      timeSetup: '0',\n      miliseconds: 0,\n      sounds: {\n        theme: Sound.status.PLAYING,\n        jump: Sound.status.PLAYING,\n        coin: Sound.status.PLAYING,\n        end: Sound.status.PLAYING,\n      },\n    };\n  }\n\n  checkSetupTime() {\n    const spliedTimeSetup = this.state.timeSetup.split('');\n    console.log(spliedTimeSetup);\n    if (spliedTimeSetup.length > 5) {\n      alert('The maximum time allowed in minutes is only 6 digits!');\n      return false;\n    }\n    return true;\n  }\n\n  changeTime(number) {\n    if (this.checkSetupTime()) {\n      this.setState((oldState) => {\n        let updateValue = oldState.timeSetup + number;\n        if (oldState.timeSetup === '0') {\n          updateValue = number;\n        }\n        return { timeSetup: updateValue };\n      });\n    }\n  }\n\n  clear() {\n    this.setState({ timeSetup: '0' });\n  }\n\n  delete() {\n    if (this.checkSetupTime()) {\n      this.setState((oldState) => {\n        let updateValue = oldState.timeSetup.slice(0, -1);\n        if (oldState.timeSetup.length < 2) {\n          updateValue = '0';\n        }\n        return { timeSetup: updateValue };\n      });\n    }\n  }\n\n  convertToMiliseconds() {\n    const { timeSetup } = this.state;\n    const miliseconds = parseInt(timeSetup, 10) * 60000;\n\n    this.setState({ miliseconds });\n  }\n\n  handleCharacterClick(character) {\n    const numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\n    numbers.forEach((number) => {\n      if (character === number) {\n        this.changeTime(character);\n      }\n    });\n\n    if (character === 'C') {\n      this.clear();\n    }\n\n    if (character === 'X') {\n      this.delete();\n    }\n\n    this.setState({ showCountdown: false, showStop: false, coin: Sound.status.PLAYING });\n  }\n\n  generateKeyboard() {\n    return (\n      <main className=\"keyboard\">\n        <p className=\"time-setup-title\">In Minutes</p>\n        <Character action={ () => alert('The time must be chosen in minutes!') } symbol={ this.state.timeSetup } type=\"timeSetup\" />\n        <Character action={ this.handleCharacterClick } symbol=\"7\" />\n        <Character action={ this.handleCharacterClick } symbol=\"8\" />\n        <Character action={ this.handleCharacterClick } symbol=\"9\" />\n        <Character action={ this.handleCharacterClick } symbol=\"4\" />\n        <Character action={ this.handleCharacterClick } symbol=\"5\" />\n        <Character action={ this.handleCharacterClick } symbol=\"6\" />\n        <Character action={ this.handleCharacterClick } symbol=\"1\" />\n        <Character action={ this.handleCharacterClick } symbol=\"2\" />\n        <Character action={ this.handleCharacterClick } symbol=\"3\" />\n        <Character action={ this.handleCharacterClick } symbol=\"X\" />\n        <Character action={ this.handleCharacterClick } symbol=\"0\" />\n        <Character action={ this.handleCharacterClick } symbol=\"C\" />\n        <Character action={ this.clockTurnSwitch } symbol={ this.state.showStop ? 'New' : 'Start' } />\n      </main>\n    );\n  }\n  \n  clockTurnSwitch() {\n    this.convertToMiliseconds();\n    this.setState((oldState) => (\n      { showCountdown: !oldState.showCountdown, showStop: !oldState.showStop, timeSetup: '0' }\n      ));\n  }\n\n  rendererCountdown({ hours, minutes, seconds, completed }) {\n    if (completed) {\n      return <div>\n      <Sound\n          url={ endMp3 }\n          playbackRate={0.9}\n          volume={30}\n          playStatus={this.state.sounds.end}\n        />\n      <Finished />\n    </div>;\n    }\n\n    return <span className=\"countdown\">{hours}:{minutes}:{seconds}</span>;\n  }\n\n  componentDidMount() {\n    this.setState({ theme: true });\n  }\n\n  render() {\n    const { sounds: { theme, jump, coin }, showCountdown, showStop, miliseconds } = this.state;\n    return (\n      <section className=\"chronometer\">\n        <header>\n        </header>\n        <main className=\"keyboardParent\">\n          <div className=\"keyboard\" />\n          <div className=\"keyboard\">\n          { (showCountdown && showStop) && <Sound url={ coinMp3 } playbackRate={2} volume={20} playStatus={coin} /> }\n          { showCountdown && <Sound url={ themeMp3 } playbackRate={1} volume={100} playStatus={theme} loop={true} /> }\n          { !showCountdown && <Sound url={ jumpMp3 } playbackRate={2} volume={20} playStatus={jump}/> }\n          { showCountdown && <Countdown date={Date.now() + miliseconds} renderer={ this.rendererCountdown } /> }\n          </div>\n          { this.generateKeyboard() }\n        </main>\n        <footer>\n          <div>.</div>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default Chronometer;\n","import React from 'react';\nimport YoutubeBackground from 'react-youtube-background';\n\nimport './App.css';\nimport Chronometer from './components/Chronometer.jsx';\n\nfunction App() {\n  return (\n    <YoutubeBackground className=\"fixed-background\" videoId=\"d4Fr_usyMbw\">\n      <Chronometer />\n    </YoutubeBackground>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}